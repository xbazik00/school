#!/bin/sh    


#global variables   
flag=0
flag2=0
number="$#"
FILE_ERE="\0"
x=0
y=0
z=0

#arguments form command line
if [ $number = 3 ] && [ $1 = -i ]; then
	FILE_ERE=$2
	DIR=$3
	flag=1
elif [ $number = 2 ] && [ $1 = -i ]; then
	FILE_ERE=$2
	DIR=$PWD
	flag=1
	flag2=1
elif [ $number = 1 ];then
	DIR=$1
else
	DIR=$PWD
	flag2=1
fi

command -v find >/dev/null 2>&1 || { echo >&2 "I require find but it's not installed.  Aborting."; exit 1; }
command -v awk >/dev/null 2>&1 || { echo >&2 "I require awk but it's not installed.  Aborting."; exit 1; }
command -v tr >/dev/null 2>&1 || { echo >&2 "I require tr but it's not installed.  Aborting."; exit 1; }
command -v wc >/dev/null 2>&1 || { echo >&2 "I require wc but it's not installed.  Aborting."; exit 1; }
command -v sort >/dev/null 2>&1 || { echo >&2 "I require sort but it's not installed.  Aborting."; exit 1; }
command -v tail >/dev/null 2>&1 || { echo >&2 "I require tail but it's not installed.  Aborting."; exit 1; }
command -v uniq >/dev/null 2>&1 || { echo >&2 "I require uniq but it's not installed.  Aborting."; exit 1; }



#checking for directory
if [ ! -d "$DIR" ]
then
	echo "Directory \"$DIR\" not found!"
	exit 1
fi	
	echo "Root directory: $DIR"

	rootdepth=`echo $DIR | tr -d -c '/\n' | awk '{ print length; }'`


igndir=$(echo "$FILE_ERE" | tr '^' '/' | tr '$' '/')
ignfile=$(echo "$FILE_ERE" | tr '^' '/')


#if script was run with -i
if [ $flag = 1 ]; then

	number_dir=`find $DIR -type d   2>/dev/null | sed -e s,$DIR,, | awk '{print $0"/"}'  | egrep -v "$igndir" | wc -l`
	
	number_files=`find $DIR -type f   2>/dev/null | sed -e s,$DIR,, | egrep -v "$igndir" | egrep -v "$ignfile"| wc -l`
	
	maxdepth=`find $DIR -type d   2>/dev/null  | sed -e s,$DIR,, | awk '{print $0"/"}'  | egrep -v "$igndir" |  tr -d -c '/\n' | awk '{ print length; }' |sort -n | tail -1`
	
	if [ $number_dir = 0 ];then
		echo >&2 "No directories found or files."; exit 1;
	fi
	#maxdepth=`expr $maxdepth - $rootdepth + 1`
	maxdepth=`expr $maxdepth`
	number_files=$((number_files+0))
	number_dir=$((number_dir+0))
	average_number_files=$((number_files/number_dir))
	
	echo "Directories: $number_dir"
	echo "Max depth: $maxdepth"
	echo "Average no. of files: $average_number_files"
	echo "All files: $number_files"
	
	if [ $number_files = 0 ];then
		largest_file='N/A'
		average_size='N/A'
		median_file='N/A'
	else
		largest_file=`find $DIR -type f -ls 2>/dev/null | sed -e s,$DIR,,  | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | sort -n | tail -1`
		size_files=`find $DIR -type f  -ls 2>/dev/null | sed -e s,$DIR,,   | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | awk '{s+=$1} END {print s}'`
		average_size=$((size_files/number_files))
	
	if [ $((number_files%2)) -eq 0 ];then
		median_file=`find $DIR -type f  -ls 2>/dev/null | sed -e s,$DIR,, | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print int((a[int(i/2)-1]+a[i/2])/2); }'`	
	else
		median_file=`find $DIR -type f  -ls 2>/dev/null | sed -e s,$DIR,, | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print a[int(i/2)]; }'`
	fi
fi
	echo "  Largest file: $largest_file"
	echo "  Average file size: $average_size"
    echo "  File size median: $median_file"

    f_ext=`find $DIR -type f 2>/dev/null | sed -e s,$DIR,, | egrep -v "$igndir" | egrep -v "$ignfile" | awk -F "/" '{print $NF}' | sort -n | uniq |   awk -F . '{if(NF==2 && substr($0,1,1)=="."){}else{if (NF>1) {print $NF}}}' | sort | uniq | sort |  grep "^[[:alnum:]]*$"`
	ex=`echo $f_ext | tr ' ' ','` 
	echo "File extensions: "$ex

for var in $f_ext
do 
	ext="*\.$var"
	number_files=`find $DIR -type f  -name "?$ext"  -print 2>/dev/null | sed -e s,$DIR,,  | egrep -v "$igndir" | egrep -v "$ignfile" | wc -l`
	number_files=$((number_files+0))
	
	if [ $number_files = 0 ];then
		largest_file='N/A'
		average_size='N/A'
		median_file='N/A'
	else
		largest_file=`find $DIR -type f  -name "?$ext" -ls 2>/dev/null | sed -e s,$DIR,,  | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | sort -n | tail -1`
		size_files_ext=`find $DIR -type f  -name "?$ext" -ls 2>/dev/null | sed -e s,$DIR,, | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | awk '{s+=$1} END {print s}'`
		average_size=$((size_files_ext/number_files))
	
		if [ $((number_files%2)) -eq 0  ];then
			median_file=`find $DIR -type f  -name "?$ext" -ls 2>/dev/null | sed -e s,$DIR,, | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print int((a[int(i/2)-1]+a[i/2])/2); }'`
		else
			median_file=`find $DIR -type f  -name "?$ext" -ls 2>/dev/null | sed -e s,$DIR,, | egrep -v "$igndir" | egrep -v "$ignfile" | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print a[int(i/2)]; }'`
		fi
	fi
	echo "Files .$var: $number_files"
	echo "  Largest file .$var: $largest_file"
	echo "  Average file size .$var: $average_size"
	echo "  File size median .$var: $median_file"
done

#if script was not run with -i
else
	number_dir=`find $DIR -type d 2>/dev/null |tr -d ' '| wc -l | sort -n`
	number_files=`find $DIR -type f 2>/dev/null | tr -d ' '| wc -l | sort -n`
	number_dir=$((number_dir+0))
	number_files=$((number_files+0))
	

	maxdepth=`find $DIR -type d 2>/dev/null | sed -e s,$DIR,, | tr -d -c '/\n' | awk '{ print length; }'| sort -n | tail -1`
	maxdepth=`expr $maxdepth + 1`
	average_number_files=$((number_files/number_dir))

	echo "Directories: $number_dir"
	echo "Max depth: $maxdepth"
	echo "Average no. of files: $average_number_files"
	echo "All files: $number_files"

	if [ $number_files = 0 ];then
		largest_file='N/A'
		average_size='N/A'
		median_file='N/A'
	else
		largest_file=`find $DIR -type f -ls 2>/dev/null | awk '{print $7}' | sort -n | tail -1` 
		size_files=`find $DIR -type f -ls 2>/dev/null | awk '{print $7}'  | awk '{s+=$1} END {print s}'`
		average_size=$((size_files/number_files))
	
		if [ $((number_files%2)) -eq 0 ];then
			median_file=`find $DIR -type f  -ls 2>/dev/null | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print int((a[int(i/2)-1]+a[i/2])/2); }'`	
		else
			median_file=`find $DIR -type f -ls 2>/dev/null | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print a[int(i/2)]; }'`
		fi
	fi

	f_ext=`find $DIR -type f 2>/dev/null | awk -F "/" '{print $NF}' | sort -n | uniq |   awk -F . '{if(NF==2 && substr($0,1,1)=="."){}else{if (NF>1) {print $NF}}}' | sort | uniq | sort |  grep "^[[:alnum:]]*$"`
	ex=`echo $f_ext | tr ' ' ','` 

	echo "  Largest file: $largest_file"
	echo "  Average file size: $average_size"
    echo "  File size median: $median_file"
	echo "File extensions: "$ex

for var in $f_ext
do 
	ext="*\.$var"
	
	number_files=`find $DIR -type f -name "?$ext"  -print 2>/dev/null | wc -l`
	number_files=$((number_files+0))
	
	largest_file=`find $DIR -type f -name "?$ext" -ls 2>/dev/null | awk '{print $7}' | sort -n | tail -1`
	size_files_ext=`find $DIR -type f -name "?$ext" -ls 2>/dev/null | awk '{print $7}' | awk '{s+=$1} END {print s}'`
	average_size=$((size_files_ext/number_files))
	if [ $((number_files%2)) -eq 0  ];then
		median_file=`find $DIR -type f -name "?$ext" -ls 2>/dev/null | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print int((a[int(i/2)-1]+a[i/2])/2); }'`
	else
		median_file=`find $DIR -type f -name "?$ext" -ls 2>/dev/null | awk '{print $7}' | sort -n |awk  ' { a[i++]=$1; } END { print a[int(i/2)]; }'`
	fi
	echo "Files .$var: "$number_files
	echo "  Largest file .$var: $largest_file"
	echo "  Average file size .$var: $average_size"
	echo "  File size median .$var: $median_file"
done
fi
exit 0